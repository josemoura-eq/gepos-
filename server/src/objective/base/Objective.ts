/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumObjectiveActualStatus } from "./EnumObjectiveActualStatus";
import {
  IsEnum,
  IsOptional,
  ValidateNested,
  IsDate,
  IsString,
} from "class-validator";
import { Contributor } from "../../contributor/base/Contributor";
import { Type } from "class-transformer";
import { EnumObjectiveExpectedStatus } from "./EnumObjectiveExpectedStatus";
@ObjectType()
class Objective {
  @ApiProperty({
    required: false,
    enum: EnumObjectiveActualStatus,
  })
  @IsEnum(EnumObjectiveActualStatus)
  @IsOptional()
  @Field(() => EnumObjectiveActualStatus, {
    nullable: true,
  })
  actualStatus?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => [Contributor],
  })
  @ValidateNested()
  @Type(() => Contributor)
  @IsOptional()
  contributor?: Array<Contributor>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    enum: EnumObjectiveExpectedStatus,
  })
  @IsEnum(EnumObjectiveExpectedStatus)
  @IsOptional()
  @Field(() => EnumObjectiveExpectedStatus, {
    nullable: true,
  })
  expectedStatus?: "Option1" | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => Objective,
  })
  @ValidateNested()
  @Type(() => Objective)
  @IsOptional()
  objective?: Objective | null;

  @ApiProperty({
    required: false,
    type: () => [Objective],
  })
  @ValidateNested()
  @Type(() => Objective)
  @IsOptional()
  objectives?: Array<Objective>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  timeframe!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  unit!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}
export { Objective };
