/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumObjectiveActualStatus } from "./EnumObjectiveActualStatus";
import { IsEnum, IsOptional, ValidateNested } from "class-validator";
import { ContributorListRelationFilter } from "../../contributor/base/ContributorListRelationFilter";
import { Type } from "class-transformer";
import { EnumObjectiveExpectedStatus } from "./EnumObjectiveExpectedStatus";
import { StringFilter } from "../../util/StringFilter";
import { ObjectiveWhereUniqueInput } from "./ObjectiveWhereUniqueInput";
import { ObjectiveListRelationFilter } from "./ObjectiveListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
@InputType()
class ObjectiveWhereInput {
  @ApiProperty({
    required: false,
    enum: EnumObjectiveActualStatus,
  })
  @IsEnum(EnumObjectiveActualStatus)
  @IsOptional()
  @Field(() => EnumObjectiveActualStatus, {
    nullable: true,
  })
  actualStatus?: "Option1";

  @ApiProperty({
    required: false,
    type: () => ContributorListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ContributorListRelationFilter)
  @IsOptional()
  @Field(() => ContributorListRelationFilter, {
    nullable: true,
  })
  contributor?: ContributorListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumObjectiveExpectedStatus,
  })
  @IsEnum(EnumObjectiveExpectedStatus)
  @IsOptional()
  @Field(() => EnumObjectiveExpectedStatus, {
    nullable: true,
  })
  expectedStatus?: "Option1";

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => ObjectiveWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ObjectiveWhereUniqueInput)
  @IsOptional()
  @Field(() => ObjectiveWhereUniqueInput, {
    nullable: true,
  })
  objective?: ObjectiveWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ObjectiveListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ObjectiveListRelationFilter)
  @IsOptional()
  @Field(() => ObjectiveListRelationFilter, {
    nullable: true,
  })
  objectives?: ObjectiveListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  timeframe?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  unit?: StringNullableFilter;
}
export { ObjectiveWhereInput };
