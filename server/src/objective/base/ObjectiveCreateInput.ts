/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumObjectiveActualStatus } from "./EnumObjectiveActualStatus";
import { IsEnum, IsOptional, ValidateNested, IsString } from "class-validator";
import { ContributorCreateNestedManyWithoutObjectivesInput } from "./ContributorCreateNestedManyWithoutObjectivesInput";
import { Type } from "class-transformer";
import { EnumObjectiveExpectedStatus } from "./EnumObjectiveExpectedStatus";
import { ObjectiveWhereUniqueInput } from "./ObjectiveWhereUniqueInput";
import { ObjectiveCreateNestedManyWithoutObjectivesInput } from "./ObjectiveCreateNestedManyWithoutObjectivesInput";
@InputType()
class ObjectiveCreateInput {
  @ApiProperty({
    required: false,
    enum: EnumObjectiveActualStatus,
  })
  @IsEnum(EnumObjectiveActualStatus)
  @IsOptional()
  @Field(() => EnumObjectiveActualStatus, {
    nullable: true,
  })
  actualStatus?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => ContributorCreateNestedManyWithoutObjectivesInput,
  })
  @ValidateNested()
  @Type(() => ContributorCreateNestedManyWithoutObjectivesInput)
  @IsOptional()
  @Field(() => ContributorCreateNestedManyWithoutObjectivesInput, {
    nullable: true,
  })
  contributor?: ContributorCreateNestedManyWithoutObjectivesInput;

  @ApiProperty({
    required: false,
    enum: EnumObjectiveExpectedStatus,
  })
  @IsEnum(EnumObjectiveExpectedStatus)
  @IsOptional()
  @Field(() => EnumObjectiveExpectedStatus, {
    nullable: true,
  })
  expectedStatus?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => ObjectiveWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ObjectiveWhereUniqueInput)
  @IsOptional()
  @Field(() => ObjectiveWhereUniqueInput, {
    nullable: true,
  })
  objective?: ObjectiveWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ObjectiveCreateNestedManyWithoutObjectivesInput,
  })
  @ValidateNested()
  @Type(() => ObjectiveCreateNestedManyWithoutObjectivesInput)
  @IsOptional()
  @Field(() => ObjectiveCreateNestedManyWithoutObjectivesInput, {
    nullable: true,
  })
  objectives?: ObjectiveCreateNestedManyWithoutObjectivesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  timeframe?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  unit?: string | null;
}
export { ObjectiveCreateInput };
